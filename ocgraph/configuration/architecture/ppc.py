#!/usr/bin/env python3
"""Contains instruction info for PPC-compatible targets."""

import re

from .architecture import Architecture
from ...data.instruction import Instruction


# Common regexes
HEX_PATTERN = r'[0-9a-fA-F]+'
HEX_LONG_PATTERN = r'(?:0x0*)?' + HEX_PATTERN

# fmt: off
ppc_call_opcodes = [
    "bl",
]

ppc_sink_opcodes = [
    "blr",
]

ppc_unconditional_branch_opcodes = [
    "b", "ba", "bla",
    "bctr", "bctrl", "blrl",
]

ppc_conditional_branch_opcodes = [
    "bdnz-",
    "bdnz+",
    "bdnz",
    "bdn",
    "bdnzl-",
    "bdnzl+",
    "bdnzl",
    "bdnl",
    "bdnza-",
    "bdnza+",
    "bdnza",
    "bdna",
    "bdnzla-",
    "bdnzla+",
    "bdnzla",
    "bdnla",
    "bdz-",
    "bdz+",
    "bdz",
    "bdzl-",
    "bdzl+",
    "bdzl",
    "bdza-",
    "bdza+",
    "bdza",
    "bdzla-",
    "bdzla+",
    "bdzla",

    "bge-",
    "bge+",
    "bge",
    "bnl-",
    "bnl+",
    "bnl",
    "bgel-",
    "bgel+",
    "bgel",
    "bnll-",
    "bnll+",
    "bnll",
    "bgea-",
    "bgea+",
    "bgea",
    "bnla-",
    "bnla+",
    "bnla",
    "bgela-",
    "bgela+",
    "bgela",
    "bnlla-",
    "bnlla+",
    "bnlla",
    "ble-",
    "ble+",
    "ble",
    "bng-",
    "bng+",
    "bng",
    "blel-",
    "blel+",
    "blel",
    "bngl-",
    "bngl+",
    "bngl",
    "blea-",
    "blea+",
    "blea",
    "bnga-",
    "bnga+",
    "bnga",
    "blela-",
    "blela+",
    "blela",
    "bngla-",
    "bngla+",
    "bngla",
    "bne-",
    "bne+",
    "bne",
    "bnel-",
    "bnel+",
    "bnel",
    "bnea-",
    "bnea+",
    "bnea",
    "bnela-",
    "bnela+",
    "bnela",
    "bns-",
    "bns+",
    "bns",
    "bnu-",
    "bnu+",
    "bnu",
    "bnsl-",
    "bnsl+",
    "bnsl",
    "bnul-",
    "bnul+",
    "bnul",
    "bnsa-",
    "bnsa+",
    "bnsa",
    "bnua-",
    "bnua+",
    "bnua",
    "bnsla-",
    "bnsla+",
    "bnsla",
    "bnula-",
    "bnula+",
    "bnula",

    "blt-",
    "blt+",
    "blt",
    "bltl-",
    "bltl+",
    "bltl",
    "blta-",
    "blta+",
    "blta",
    "bltla-",
    "bltla+",
    "bltla",
    "bgt-",
    "bgt+",
    "bgt",
    "bgtl-",
    "bgtl+",
    "bgtl",
    "bgta-",
    "bgta+",
    "bgta",
    "bgtla-",
    "bgtla+",
    "bgtla",
    "beq-",
    "beq+",
    "beq",
    "beql-",
    "beql+",
    "beql",
    "beqa-",
    "beqa+",
    "beqa",
    "beqla-",
    "beqla+",
    "beqla",
    "bso-",
    "bso+",
    "bso",
    "bun-",
    "bun+",
    "bun",
    "bsol-",
    "bsol+",
    "bsol",
    "bunl-",
    "bunl+",
    "bunl",
    "bsoa-",
    "bsoa+",
    "bsoa",
    "buna-",
    "buna+",
    "buna",
    "bsola-",
    "bsola+",
    "bsola",
    "bunla-",
    "bunla+",
    "bunla",

    "bdnzf-",
    "bdnzf+",
    "bdnzf",
    "bdnzfl-",
    "bdnzfl+",
    "bdnzfl",
    "bdnzfa-",
    "bdnzfa+",
    "bdnzfa",
    "bdnzfla-",
    "bdnzfla+",
    "bdnzfla",
    "bdzf-",
    "bdzf+",
    "bdzf",
    "bdzfl-",
    "bdzfl+",
    "bdzfl",
    "bdzfa-",
    "bdzfa+",
    "bdzfa",
    "bdzfla-",
    "bdzfla+",
    "bdzfla",

    "bf-",
    "bf+",
    "bf",
    "bbf",
    "bfl-",
    "bfl+",
    "bfl",
    "bbfl",
    "bfa-",
    "bfa+",
    "bfa",
    "bbfa",
    "bfla-",
    "bfla+",
    "bfla",
    "bbfla",

    "bdnzt-",
    "bdnzt+",
    "bdnzt",
    "bdnztl-",
    "bdnztl+",
    "bdnztl",
    "bdnzta-",
    "bdnzta+",
    "bdnzta",
    "bdnztla-",
    "bdnztla+",
    "bdnztla",
    "bdzt-",
    "bdzt+",
    "bdzt",
    "bdztl-",
    "bdztl+",
    "bdztl",
    "bdzta-",
    "bdzta+",
    "bdzta",
    "bdztla-",
    "bdztla+",
    "bdztla",

    "bt-",
    "bt+",
    "bt",
    "bbt",
    "btl-",
    "btl+",
    "btl",
    "bbtl",
    "bta-",
    "bta+",
    "bta",
    "bbta",
    "btla-",
    "btla+",
    "btla",
    "bbtla",

    "bc-",
    "bc+",
    "bc",
    "bcl-",
    "bcl+",
    "bcl",
    "bca-",
    "bca+",
    "bca",
    "bcla-",
    "bcla+",
    "bcla",

    "bdnzlr",
    "bdnzlr-",
    "bdnzlrl",
    "bdnzlrl-",
    "bdnzlr+",
    "bdnzlrl+",
    "bdzlr",
    "bdzlr-",
    "bdzlrl",
    "bdzlrl-",
    "bdzlr+",
    "bdzlrl+",
    #"blr",
    "br",
    #"blrl",
    "brl",
    "bdnzlr-",
    "bdnzlrl-",
    "bdnzlr+",
    "bdnzlrl+",
    "bdzlr-",
    "bdzlrl-",
    "bdzlr+",
    "bdzlrl+",

    "bgelr",
    "bgelr-",
    "bger",
    "bnllr",
    "bnllr-",
    "bnlr",
    "bgelrl",
    "bgelrl-",
    "bgerl",
    "bnllrl",
    "bnllrl-",
    "bnlrl",
    "blelr",
    "blelr-",
    "bler",
    "bnglr",
    "bnglr-",
    "bngr",
    "blelrl",
    "blelrl-",
    "blerl",
    "bnglrl",
    "bnglrl-",
    "bngrl",
    "bnelr",
    "bnelr-",
    "bner",
    "bnelrl",
    "bnelrl-",
    "bnerl",
    "bnslr",
    "bnslr-",
    "bnsr",
    "bnulr",
    "bnulr-",
    "bnslrl",
    "bnslrl-",
    "bnsrl",
    "bnulrl",
    "bnulrl-",
    "bgelr+",
    "bnllr+",
    "bgelrl+",
    "bnllrl+",
    "blelr+",
    "bnglr+",
    "blelrl+",
    "bnglrl+",
    "bnelr+",
    "bnelrl+",
    "bnslr+",
    "bnulr+",
    "bnslrl+",
    "bnulrl+",
    "bgelr-",
    "bnllr-",
    "bgelrl-",
    "bnllrl-",
    "blelr-",
    "bnglr-",
    "blelrl-",
    "bnglrl-",
    "bnelr-",
    "bnelrl-",
    "bnslr-",
    "bnulr-",
    "bnslrl-",
    "bnulrl-",
    "bgelr+",
    "bnllr+",
    "bgelrl+",
    "bnllrl+",
    "blelr+",
    "bnglr+",
    "blelrl+",
    "bnglrl+",
    "bnelr+",
    "bnelrl+",
    "bnslr+",
    "bnulr+",
    "bnslrl+",
    "bnulrl+",
    "bltlr",
    "bltlr-",
    "bltr",
    "bltlrl",
    "bltlrl-",
    "bltrl",
    "bgtlr",
    "bgtlr-",
    "bgtr",
    "bgtlrl",
    "bgtlrl-",
    "bgtrl",
    "beqlr",
    "beqlr-",
    "beqr",
    "beqlrl",
    "beqlrl-",
    "beqrl",
    "bsolr",
    "bsolr-",
    "bsor",
    "bunlr",
    "bunlr-",
    "bsolrl",
    "bsolrl-",
    "bsorl",
    "bunlrl",
    "bunlrl-",
    "bltlr+",
    "bltlrl+",
    "bgtlr+",
    "bgtlrl+",
    "beqlr+",
    "beqlrl+",
    "bsolr+",
    "bunlr+",
    "bsolrl+",
    "bunlrl+",
    "bltlr-",
    "bltlrl-",
    "bgtlr-",
    "bgtlrl-",
    "beqlr-",
    "beqlrl-",
    "bsolr-",
    "bunlr-",
    "bsolrl-",
    "bunlrl-",
    "bltlr+",
    "bltlrl+",
    "bgtlr+",
    "bgtlrl+",
    "beqlr+",
    "beqlrl+",
    "bsolr+",
    "bunlr+",
    "bsolrl+",
    "bunlrl+",

    "bdnzflr",
    "bdnzflr-",
    "bdnzflrl",
    "bdnzflrl-",
    "bdnzflr+",
    "bdnzflrl+",
    "bdzflr",
    "bdzflr-",
    "bdzflrl",
    "bdzflrl-",
    "bdzflr+",
    "bdzflrl+",
    "bflr",
    "bflr-",
    "bbfr",
    "bflrl",
    "bflrl-",
    "bbfrl",
    "bflr+",
    "bflrl+",
    "bflr-",
    "bflrl-",
    "bflr+",
    "bflrl+",
    "bdnztlr",
    "bdnztlr-",
    "bdnztlrl",
    "bdnztlrl-",
    "bdnztlr+",
    "bdnztlrl+",
    "bdztlr",
    "bdztlr-",
    "bdztlrl",
    "bdztlrl-",
    "bdztlr+",
    "bdztlrl+",
    "btlr",
    "btlr-",
    "bbtr",
    "btlrl",
    "btlrl-",
    "bbtrl",
    "btlr+",
    "btlrl+",
    "btlr-",
    "btlrl-",
    "btlr+",
    "btlrl+",

    "bclr-",
    "bclrl-",
    "bclr+",
    "bclrl+",
    "bclr",
    "bcr",
    "bclrl",
    "bcrl",

    #"bctr",
    #"bctrl",

    "bgectr",
    "bgectr-",
    "bnlctr",
    "bnlctr-",
    "bgectrl",
    "bgectrl-",
    "bnlctrl",
    "bnlctrl-",
    "blectr",
    "blectr-",
    "bngctr",
    "bngctr-",
    "blectrl",
    "blectrl-",
    "bngctrl",
    "bngctrl-",
    "bnectr",
    "bnectr-",
    "bnectrl",
    "bnectrl-",
    "bnsctr",
    "bnsctr-",
    "bnuctr",
    "bnuctr-",
    "bnsctrl",
    "bnsctrl-",
    "bnuctrl",
    "bnuctrl-",
    "bgectr+",
    "bnlctr+",
    "bgectrl+",
    "bnlctrl+",
    "blectr+",
    "bngctr+",
    "blectrl+",
    "bngctrl+",
    "bnectr+",
    "bnectrl+",
    "bnsctr+",
    "bnuctr+",
    "bnsctrl+",
    "bnuctrl+",
    "bgectr-",
    "bnlctr-",
    "bgectrl-",
    "bnlctrl-",
    "blectr-",
    "bngctr-",
    "blectrl-",
    "bngctrl-",
    "bnectr-",
    "bnectrl-",
    "bnsctr-",
    "bnuctr-",
    "bnsctrl-",
    "bnuctrl-",
    "bgectr+",
    "bnlctr+",
    "bgectrl+",
    "bnlctrl+",
    "blectr+",
    "bngctr+",
    "blectrl+",
    "bngctrl+",
    "bnectr+",
    "bnectrl+",
    "bnsctr+",
    "bnuctr+",
    "bnsctrl+",
    "bnuctrl+",
    "bltctr",
    "bltctr-",
    "bltctrl",
    "bltctrl-",
    "bgtctr",
    "bgtctr-",
    "bgtctrl",
    "bgtctrl-",
    "beqctr",
    "beqctr-",
    "beqctrl",
    "beqctrl-",
    "bsoctr",
    "bsoctr-",
    "bunctr",
    "bunctr-",
    "bsoctrl",
    "bsoctrl-",
    "bunctrl",
    "bunctrl-",
    "bltctr+",
    "bltctrl+",
    "bgtctr+",
    "bgtctrl+",
    "beqctr+",
    "beqctrl+",
    "bsoctr+",
    "bunctr+",
    "bsoctrl+",
    "bunctrl+",
    "bltctr-",
    "bltctrl-",
    "bgtctr-",
    "bgtctrl-",
    "beqctr-",
    "beqctrl-",
    "bsoctr-",
    "bunctr-",
    "bsoctrl-",
    "bunctrl-",
    "bltctr+",
    "bltctrl+",
    "bgtctr+",
    "bgtctrl+",
    "beqctr+",
    "beqctrl+",
    "bsoctr+",
    "bunctr+",
    "bsoctrl+",
    "bunctrl+",

    "bfctr",
    "bfctr-",
    "bfctrl",
    "bfctrl-",
    "bfctr+",
    "bfctrl+",
    "bfctr-",
    "bfctrl-",
    "bfctr+",
    "bfctrl+",
    "btctr",
    "btctr-",
    "btctrl",
    "btctrl-",
    "btctr+",
    "btctrl+",
    "btctr-",
    "btctrl-",
    "btctr+",
    "btctrl+",

    "bcctr-",
    "bcctrl-",
    "bcctr+",
    "bcctrl+",
    "bcctr",
    "bcc",
    "bcctrl",
    "bccl",

    "bctar-",
    "bctarl-",
    "bctar+",
    "bctarl+",
    "bctar",
    "bctarl",
]
# fmt: on


class PpcArchitecture(Architecture):
    """PpcArchitecture Class"""

    def comment(self):
        return "#"

    def is_call(self, instruction: Instruction):
        return instruction.opcode in ppc_call_opcodes

    def is_branch(self, instruction: Instruction):
        return instruction.opcode in (ppc_conditional_branch_opcodes + ppc_unconditional_branch_opcodes) and not self.is_call(instruction)

    def is_unconditional_branch(self, instruction: Instruction):
        return instruction.opcode in ppc_unconditional_branch_opcodes

    def is_sink(self, instruction: Instruction):
        return instruction.opcode in ppc_sink_opcodes

    def is_direct_branch(self, instruction: Instruction):
        return self.is_branch(instruction) and (re.search(rf"{HEX_LONG_PATTERN}", '|'.join(instruction.ops)))
